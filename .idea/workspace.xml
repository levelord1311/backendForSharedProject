<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="19f7c286-4b58-41df-abef-1f7ca6ee8d15" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/api_service/.idea/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/cmd/main/app.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/internal/client/user_service/model.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/internal/client/user_service/service.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/internal/handlers/auth/handler.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/internal/handlers/googleAuth/handler.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/internal/handlers/handler.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/pkg/apperror/error.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/pkg/apperror/middleware.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/pkg/handlers/metric/handler.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/pkg/jwt/helper.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/pkg/jwt/jwt.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/pkg/jwt/middleware.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/pkg/metric/handler.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/pkg/rest/api.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/pkg/rest/client.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/pkg/rest/errors.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/pkg/rest/url.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_service/app/pkg/shutdown/shutdown.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/user_service/app/cmd/main/app.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/user_service/app/internal/config/config.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/user_service/app/internal/handlers/handler.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/user_service/app/internal/user/db/mysql.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/user_service/app/internal/user/model.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/user_service/app/internal/user/service.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/user_service/app/internal/user/storage.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/user_service/app/pkg/apperror/error.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/user_service/app/pkg/apperror/middleware.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/user_service/app/pkg/logging/logging.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/user_service/app/pkg/metric/handler.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/user_service/app/pkg/mysql/client.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/user_service/app/pkg/shutdown/shutdown.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/6cb1b0e9-1f17-45e1-b60e-1ca39fce40ac.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/6cb1b0e9-1f17-45e1-b60e-1ca39fce40ac.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Procfile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/cmd/apiserver/main.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/app/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/apiserver/apiserver.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/apiserver/apiserver.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/apiserver/config.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/apiserver/googledata.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/apiserver/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/apiserver/server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/apiserver/server_internal_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/apiserver/server_internal_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/model/estateLot.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/model/estateLot.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/model/rawtime.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/model/rawtime.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/model/testing.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/model/testing.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/model/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/model/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/model/validations.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/model/validations.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/model_test/user_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/model_test/user_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/store/errors.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/store/errors.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/store/repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/store/repository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/store/sqlstore/estateLotRepository.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/store/sqlstore/estateLotRepository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/store/sqlstore/store.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/store/sqlstore/store.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/store/sqlstore/testing.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/store/sqlstore/testing.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/store/sqlstore/userrepository.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/store/sqlstore/userrepository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/store/sqlstore_test/store_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/store/sqlstore_test/store_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/store/sqlstore_test/userRepository_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/store/sqlstore_test/userRepository_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/store/store.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/store/store.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/store/teststore/estatelotrepository.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/store/teststore/estatelotrepository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/store/teststore/estatelotrepository_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/store/teststore/estatelotrepository_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/store/teststore/store.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/store/teststore/store.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/store/teststore/userrepository.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/store/teststore/userrepository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/app/store/teststore/userrepository_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/app/store/teststore/userrepository_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/internal/config/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/internal/config/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/pkg/jwt/jwt.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/app/pkg/logging/logging.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/app/pkg/logging/logging.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/migrations/20221109105920_create_users.down.sql" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/migrations/20221109105920_create_users.down.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/migrations/20221109105920_create_users.up.sql" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/migrations/20221109105920_create_users.up.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/migrations/20221109120110_create_estate_lots.down.sql" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/migrations/20221109120110_create_estate_lots.down.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/migrations/20221109120110_create_estate_lots.up.sql" beforeDir="false" afterPath="$PROJECT_DIR$/api_service/migrations/20221109120110_create_estate_lots.up.sql" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/go1.19.1" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/api_service/app/cmd/main/app.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/api_service/app/internal/app/apiserver/apiserver.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/api_service/app/internal/app/apiserver/server.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/api_service/app/internal/app/model/user.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/api_service/app/internal/app/store/repository.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/api_service/app/internal/app/store/sqlstore/userrepository.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/api_service/app/pkg/jwt/jwt.go" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2FcKjVHrJAcC1TZUqhdlSu8M1ZQ" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.format.on.save.advertiser.fired": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed": "true",
    "WebServerToolWindowFactoryState": "false",
    "configurable..is.expanded": "false",
    "configurable.GoLibrariesConfigurable.is.expanded": "true",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "C:/Users/rmv13/GolandProjects/backendForSharedProject",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "goland.project.structure"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "mysql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\rmv13\GolandProjects\backendForSharedProject\api_service\app\pkg" />
      <recent name="C:\Users\rmv13\GolandProjects\backendForSharedProject\user_service\app" />
      <recent name="C:\Users\rmv13\GolandProjects\backendForSharedProject\user_service\app\pkg" />
      <recent name="C:\Users\rmv13\GolandProjects\backendForSharedProject\app\pkg" />
      <recent name="C:\Users\rmv13\GolandProjects\backendForSharedProject\pkg" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\rmv13\GolandProjects\backendForSharedProject\api_service\app\internal" />
      <recent name="C:\Users\rmv13\GolandProjects\backendForSharedProject" />
      <recent name="C:\Users\rmv13\GolandProjects\backendForSharedProject\api_service" />
      <recent name="C:\Users\rmv13\GolandProjects\backendForSharedProject\app" />
      <recent name="C:\Users\rmv13\GolandProjects\backendForSharedProject\pkg" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestServer_HandleEstateLotsCreate in backendForSharedProject/internal/app/apiserver">
    <configuration name="TestEstateLotRepository_CreateEstateLot in backendForSharedProject/internal/app/store/teststore" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="backendForSharedProject" />
      <working_directory value="$PROJECT_DIR$/internal/app/store/teststore" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="backendForSharedProject/internal/app/store/teststore" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestEstateLotRepository_CreateEstateLot\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestServer_HandleEstateLotsCreate in backendForSharedProject/internal/app/apiserver" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="backendForSharedProject" />
      <working_directory value="$PROJECT_DIR$/internal/app/apiserver" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="backendForSharedProject/internal/app/apiserver" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestServer_HandleEstateLotsCreate\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestServer_HandleEstateLotsCreate/empty_body in backendForSharedProject/internal/app/apiserver" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="backendForSharedProject" />
      <working_directory value="$PROJECT_DIR$/internal/app/apiserver" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="backendForSharedProject/internal/app/apiserver" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestServer_HandleEstateLotsCreate\E$/^\Qempty_body\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestServer_HandleJWTCreate in backendForSharedProject/internal/app/apiserver" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="backendForSharedProject" />
      <working_directory value="$PROJECT_DIR$/internal/app/apiserver" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="backendForSharedProject/internal/app/apiserver" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestServer_HandleJWTCreate\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUserRepository_FindByUsername in backendForSharedProject/internal/app/store/teststore" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="backendForSharedProject" />
      <working_directory value="$PROJECT_DIR$/internal/app/store/teststore" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="backendForSharedProject/internal/app/store/teststore" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUserRepository_FindByUsername\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestServer_HandleEstateLotsCreate in backendForSharedProject/internal/app/apiserver" />
        <item itemvalue="Go Test.TestServer_HandleEstateLotsCreate/empty_body in backendForSharedProject/internal/app/apiserver" />
        <item itemvalue="Go Test.TestServer_HandleJWTCreate in backendForSharedProject/internal/app/apiserver" />
        <item itemvalue="Go Test.TestEstateLotRepository_CreateEstateLot in backendForSharedProject/internal/app/store/teststore" />
        <item itemvalue="Go Test.TestUserRepository_FindByUsername in backendForSharedProject/internal/app/store/teststore" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.toml" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="forHeroku" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>