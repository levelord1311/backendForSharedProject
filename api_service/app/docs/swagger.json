{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API service for frontend service to interact with",
        "title": "API Service",
        "contact": {},
        "version": "0.0.1"
    },
    "host": "localhost:8080",
    "basePath": "/api/",
    "paths": {
        "/auth": {
            "post": {
                "description": "authenticates user and returns JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "description": "user data",
                        "name": "DTO",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_service.SignInUserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "418": {
                        "description": "I'm a teapot",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            }
        },
        "/lots": {
            "get": {
                "description": "Get lots with filter from query.\nSupported comparisons: eq, neq, lt, lte, gt, gte.\nFor range use example ?created_by=2022-12-21:2022-12-22",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lots"
                ],
                "summary": "Show lots",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filter by estate type",
                        "name": "estate_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by rooms quantity",
                        "name": "rooms",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by district",
                        "name": "district",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by price",
                        "name": "price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by date of creation",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by floor",
                        "name": "floor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lot_service.Lot"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "418": {
                        "description": "I'm a teapot",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            },
            "post": {
                "description": "creates lot by user id from JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lots"
                ],
                "summary": "Create new lot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "description": "/lots/lot/{created_id}"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "418": {
                        "description": "I'm a teapot",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            }
        },
        "/lots/lot/{id}": {
            "get": {
                "description": "get lot by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lots"
                ],
                "summary": "Show lot by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Lot ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lot_service.Lot"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "418": {
                        "description": "I'm a teapot",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Get lots created during last 7 days.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "lots"
                ],
                "summary": "Update lot price",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Lot ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new lot price",
                        "name": "price",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "418": {
                        "description": "I'm a teapot",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            }
        },
        "/lots/user/{id}": {
            "get": {
                "description": "get lots created by user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lots"
                ],
                "summary": "Show lots by user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/lot_service.Lot"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "418": {
                        "description": "I'm a teapot",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            }
        },
        "/lots/week": {
            "get": {
                "description": "Get lots created during last 7 days.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lots"
                ],
                "summary": "Show lots created during last 7 days.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/lot_service.Lot"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "418": {
                        "description": "I'm a teapot",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Creates User \u0026 returns JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "user data",
                        "name": "DTO",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_service.CreateUserDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "jwt.token.string",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "418": {
                        "description": "I'm a teapot",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apperror.AppError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "developer_message": {
                    "type": "string"
                },
                "fields": {
                    "$ref": "#/definitions/apperror.ErrorFields"
                },
                "message": {
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/apperror.ErrorParams"
                }
            }
        },
        "apperror.ErrorFields": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "apperror.ErrorParams": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "lot_service.Lot": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "integer"
                },
                "building": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "created_by_user_id": {
                    "type": "integer"
                },
                "district": {
                    "type": "string"
                },
                "floor": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "max_floor": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "redactedAt": {
                    "type": "string"
                },
                "rooms": {
                    "type": "integer"
                },
                "street": {
                    "type": "string"
                },
                "type_of_estate": {
                    "type": "string"
                }
            }
        },
        "user_service.CreateUserDTO": {
            "description": "user information for registering in db. All fields are required.",
            "type": "object",
            "properties": {
                "email": {
                    "description": "must be formatted as valid email address",
                    "type": "string",
                    "example": "testUser1@mail.com"
                },
                "password": {
                    "description": "expected length greater than 6 symbols",
                    "type": "string",
                    "example": "testPassword"
                },
                "username": {
                    "type": "string",
                    "example": "testUser1"
                }
            }
        },
        "user_service.SignInUserDTO": {
            "description": "user information for authentication in db. All fields are required.",
            "type": "object",
            "properties": {
                "login": {
                    "description": "user's email or username",
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}